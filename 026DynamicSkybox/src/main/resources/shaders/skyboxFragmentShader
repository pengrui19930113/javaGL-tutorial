#version 330

in vec3 textureCoords;

out vec4 outputColor;

uniform samplerCube cubeMap;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColour;

const float lowerLimit = -1.0; //
const float upperLimit = 1.0;

void main(void){
	
	vec4 texture1 = texture(cubeMap,textureCoords);
	vec4 texture2 = texture(cubeMap2,textureCoords);
	vec4 mixedColor = mix(texture1,texture2,blendFactor); // mix(src1,src2,blend): src1Color*(1-blend) + src2Color*blend;
	
	
	float factor = (textureCoords.y - lowerLimit)/(upperLimit - lowerLimit);
	factor = clamp(factor,0.0,1.0);
	outputColor = mix(vec4(fogColour,1.0),mixedColor,factor);
	
	//outputColor = mixedColor;
	//outputColor = vec4(textureCoords,1);
}