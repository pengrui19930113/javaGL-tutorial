#version 330

in vec4 clipSpace;
in vec2 textureCoords;

out vec4 outputColor;

uniform sampler2D reflectionTexture;
uniform sampler2D refractionTexture;
uniform sampler2D dudvMap;
uniform float moveFactor;

const float waveStrength = 0.01;

void main(void){
	
	vec2 ndc = clipSpace.xy/clipSpace.w; // [-1,1][-1,1]
	ndc = ndc/2.0+0.5; // [-1,1][-1,1] to [0,1][0,1]
	vec2 refractTexCoords = vec2(ndc.x,ndc.y);
	vec2 reflectTexCoords = vec2(ndc.x,1-ndc.y);// can be use vec2(ndc.x,-ndc.y)
	
	vec2 distortion1 = texture(dudvMap,vec2(textureCoords.x+moveFactor,textureCoords.y)).rg*2.0-1.0;// [0,1] to [-1,1]
	distortion1 *= waveStrength;
	
	vec2 distortion2 = texture(dudvMap,vec2(-textureCoords.x,textureCoords.y+moveFactor)).rg*2.0-1.0;// just more distortion
	distortion2 *= waveStrength;
	
	vec2 totalDistortion = distortion1 + distortion2;
	refractTexCoords += totalDistortion;
	refractTexCoords = clamp(refractTexCoords,0.001,0.999);
	
	reflectTexCoords += totalDistortion;
	reflectTexCoords = clamp(reflectTexCoords,0.001,0.999);
	//reflectTexCoords.x = clamp(reflectTexCoords.x,0.001,0.999); 
	//reflectTexCoords.y = clamp(reflectTexCoords.y,-0.999,-0.001);//same as 1 minus reflectTexCoords.y;
	
	vec4 reflectColour = texture(reflectionTexture,reflectTexCoords);
	vec4 refractColour = texture(refractionTexture,refractTexCoords);
	
	outputColor = mix(reflectColour,refractColour,0.5);
	outputColor = mix(outputColor,vec4(0,0.3,0.5,1),0.2); //mix sky/water color
}